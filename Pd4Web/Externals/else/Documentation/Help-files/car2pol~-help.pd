#N canvas 468 56 562 457 10;
#X obj 1 268 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 1 330 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 1 394 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 90 279 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 90 305 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 90 364 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 91 341 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 1 429 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 198 404 (none), f 7;
#X text 182 242 Amplitude;
#X text 294 242 Phase;
#X text 142 148 Real;
#X text 347 149 Imaginary;
#X text 199 342 - amplitude of the polar form, f 32;
#X text 199 365 - phase in radians (-pi to pi) of the polar form, f 51;
#X text 198 279 - real part from the cartesian coordinates, f 43;
#X text 199 307 - imaginary part from the cartesian coordinates, f 48;
#X obj 4 5 cnv 15 301 42 empty empty car2pol~ 20 20 2 37 #e0e0e0 #000000 0;
#X obj 307 6 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 3 5 graph;
#X obj 346 13 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 24 42 cnv 4 4 4 empty empty Cartesian 0 28 2 18 #e0e0e0 #000000 0;
#X obj 99 42 cnv 4 4 4 empty empty to 0 28 2 18 #e0e0e0 #000000 0;
#X obj 459 13 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 479 13 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 516 13 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 465 28 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 503 28 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 306 5 graph;
#X obj 121 42 cnv 4 4 4 empty empty polar 0 28 2 18 #e0e0e0 #000000 0;
#X obj 166 42 cnv 4 4 4 empty empty conversion 0 28 2 18 #e0e0e0 #000000 0;
#X obj 182 183 else/car2pol~, f 16;
#X obj 182 215 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 491 84 else/setdsp~;
#N canvas 714 162 534 482 spectral 0;
#X obj 98 244 cnv 15 300 100 empty empty polar: 6 10 0 14 #e0e0e0 #404040 0;
#X obj 229 152 rfft~;
#X obj 228 431 rifft~;
#X text 291 375 back to cartesian;
#X text 275 175 <= imaginary;
#X text 121 288 amplitude =>;
#X text 290 287 <= phase;
#X text 213 274 spectral;
#X text 207 293 processing;
#X text 213 311 in here;
#X text 166 177 real =>;
#X text 287 215 to polar form;
#X text 214 257 Do some;
#X text 86 27 [car2pol~] is useful for spectral processing in the more intuitive polar form (with amplitude and phase values). This is because when performing spectral analysis in Pd \, the signal is in the cartesian form \, so we need [car2pol~] and [pol2car~] to convert to and from the polar form in order to perform the FFT and iFFT. Here's the general idea:, f 57;
#X obj 203 215 else/car2pol~;
#X obj 203 374 else/pol2car~;
#X connect 1 0 14 0;
#X connect 1 1 14 1;
#X connect 14 0 15 0;
#X connect 14 1 15 1;
#X connect 15 0 2 0;
#X connect 15 1 2 1;
#X restore 447 194 pd spectral \; processing;
#X text 20 149 see also:;
#X obj 24 194 else/mag~;
#X obj 24 215 else/pol2car~;
#X obj 24 172 else/car2pol;
#X obj 275 215 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 182 149 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X obj 275 149 else/numbox~ 6 12 100 #c0c0c4 #440008 10 0 0 0;
#X text 80 90 [car2pol~] converts cartesian coordinates (real / imaginary) to polar coordinates (amplitude / phase). It has support for multichannel signals.;
#X text 129 279 signal(s);
#X text 129 307 signal(s);
#X text 129 342 signal(s);
#X text 129 365 signal(s);
#N canvas 724 202 426 356 multichannel 0;
#X obj 105 130 snake~ in;
#X listbox 105 104 12 0 0 0 - - - 0;
#X obj 304 146 setdsp~ 0;
#X obj 105 211 else/s2f~;
#X listbox 105 276 19 0 0 0 - - - 12;
#X obj 105 75 else/initmess 0.75 0.5;
#X obj 105 163 else/car2pol~;
#X obj 180 211 else/s2f~;
#X listbox 180 243 20 0 0 0 - - - 12;
#X obj 202 162 snake~ in;
#X listbox 202 136 12 0 0 0 - - - 0;
#X obj 202 107 else/initmess 0.5 -0.5;
#X text 100 28 Multichannel support example. The number of channels need to match!, f 43;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 3 0 4 0;
#X connect 5 0 1 0;
#X connect 6 0 3 0;
#X connect 6 1 7 0;
#X connect 7 0 8 0;
#X connect 9 0 6 1;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X restore 429 235 pd multichannel;
#X connect 31 0 32 0;
#X connect 31 1 39 0;
#X connect 40 0 31 0;
#X connect 41 0 31 1;
