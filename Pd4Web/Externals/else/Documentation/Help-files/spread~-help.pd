#N canvas 358 35 567 454 10;
#X obj 6 271 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 325 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 5 358 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X text 207 336 signal;
#X obj 178 278 cnv 17 3 17 empty empty n 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 135 365 1) float;
#X text 135 382 2) float;
#X obj 2 3 cnv 15 301 42 empty empty spread~ 20 20 2 37 #e0e0e0 #000000 0;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 22 40 cnv 4 4 4 empty empty Spread 0 28 2 18 #e0e0e0 #000000 0;
#X obj 83 40 cnv 4 4 4 empty empty inputs 0 28 2 18 #e0e0e0 #000000 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 135 40 cnv 4 4 4 empty empty to 0 28 2 18 #e0e0e0 #000000 0;
#X obj 5 422 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 173 153 sig~ 1;
#X obj 228 153 sig~ 2;
#X obj 173 237 else/numbox~ 3 10 100 #c0c0c4 #440008 10 0 0 0;
#X obj 218 237 else/numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 284 237 else/numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 349 237 else/numbox~ 3 10 100 #c0c0c4 #440008 10 0 0 0;
#X obj 283 153 sig~ 3;
#X obj 179 333 cnv 17 3 17 empty empty n 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 155 40 cnv 4 4 4 empty empty outputs 0 28 2 18 #e0e0e0 #000000 0;
#X obj 480 71 else/setdsp~;
#N canvas 736 109 538 455 example 0;
#X obj 155 329 else/spread~ 4 2;
#X obj 75 122 else/pulsecount~ 4;
#X obj 75 153 else/match~ 1 2 3 4, f 48;
#X obj 146 249 else/resonant~ 800 200;
#X obj 75 288 else/resonant~ 600 400;
#X obj 217 220 else/resonant~ 900 400;
#X obj 288 191 else/resonant~ 1100 100;
#X text 107 50 It's good to test this example with headphones.;
#X obj 160 367 else/out~;
#X obj 75 93 else/tempo~ -on 160;
#X connect 0 0 8 0;
#X connect 0 1 8 1;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 0;
#X connect 2 2 5 0;
#X connect 2 3 6 0;
#X connect 3 0 0 1;
#X connect 4 0 0 0;
#X connect 5 0 0 2;
#X connect 6 0 0 3;
#X connect 9 0 1 0;
#X restore 469 212 pd example;
#X text 207 277 signal;
#X text 259 277 - input channels, f 17;
#X text 259 335 - output channels;
#X text 193 365 - 'n' number of inputs (2 to 512 \, default 2);
#X text 193 382 - 'n' number of outputs (2 to 512 \, default 2);
#X text 22 154 see also:;
#X obj 17 178 else/spread.mc~;
#X obj 17 234 else/rotate~;
#X obj 173 189 else/spread~ 3 4 1, f 28;
#X text 135 398 3) float;
#X text 193 398 - spread (default 1);
#X obj 178 301 cnv 17 3 17 empty empty r 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 207 300 signal;
#X text 259 300 - spread parameter;
#X text 64 90 [spread~] spreads any number of input channels across any number of output channels with equal power panning according to a spread parameter.;
#N canvas 438 23 517 694 spread 0;
#X obj 35 331 setdsp~;
#X obj 119 410 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 189 410 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 260 410 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 198 294 sig~ 2;
#X obj 259 294 sig~ 3;
#X obj 137 295 sig~ 1;
#X obj 333 410 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 100 649 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 165 649 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 229 649 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 202 549 sig~ 2;
#X obj 263 549 sig~ 3;
#X obj 141 549 sig~ 1;
#X obj 294 649 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 141 598 spread~ 3 5, f 31;
#X obj 359 649 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 320 304 else/f2s~ 10 1;
#X obj 137 361 else/spread~ 3 4, f 31;
#X text 46 16 The algorithm is basically the same as [pan~] where each input gets it's location according proportional to the output. In the first example below \, [sig~ 1] and [sig~ 3] correspond exactly to the outer channels \, but [sig~ 2] sits in between the two middle outputs \, so the signal is panned to both at mid point via the usual Sine/Cosine equal power function. This is considering the default spread value of 1!, f 71;
#X text 46 95 Spread values greater than 1 spreads the signal to more channels while smaller than 1 narrows the crossfading point closer to the selected channel. In the example below \, if you give it a spread value of 0.5 \, [sig~ 2] doesn't reach any of the outputs while [sig~ 1] and [sig~ 3] still match the exact spot of the outer outputs. Values greater than one will spread [sig~ 1] and [sig~ 3] to adjacent channels (and it spreads circularly like [pan~])., f 71;
#X text 50 185 Try also the other exanmple at the bottom and see if you can figure this out., f 70;
#X obj 320 246 else/knob 50 0.5 2 1 1 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 1;
#X obj 320 330 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 324 545 else/f2s~ 10 1;
#X obj 324 487 else/knob 50 0.5 2 1 1 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 1;
#X obj 324 571 numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X text 385 330 spread;
#X text 386 570 spread;
#X connect 4 0 18 1;
#X connect 5 0 18 2;
#X connect 6 0 18 0;
#X connect 11 0 15 1;
#X connect 12 0 15 2;
#X connect 13 0 15 0;
#X connect 15 0 8 0;
#X connect 15 1 9 0;
#X connect 15 2 10 0;
#X connect 15 3 14 0;
#X connect 15 4 16 0;
#X connect 17 0 23 0;
#X connect 18 0 1 0;
#X connect 18 1 2 0;
#X connect 18 2 3 0;
#X connect 18 3 7 0;
#X connect 22 0 17 0;
#X connect 23 0 18 3;
#X connect 24 0 26 0;
#X connect 25 0 24 0;
#X connect 26 0 15 3;
#X restore 469 238 pd spread;
#X obj 17 208 else/pan~;
#X connect 21 0 40 0;
#X connect 22 0 40 1;
#X connect 27 0 40 2;
#X connect 40 0 23 0;
#X connect 40 1 24 0;
#X connect 40 2 25 0;
#X connect 40 3 26 0;
