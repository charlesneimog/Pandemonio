#N canvas 484 88 564 558 10;
#X obj 23 41 cnv 4 4 4 empty empty Midi 0 28 2 18 #e0e0e0 #000000 0;
#X obj 65 41 cnv 4 4 4 empty empty control 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 4 cnv 15 301 42 empty empty ctl.in 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 4 graph;
#X obj 2 263 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 352 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 476 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 95 270 cnv 17 3 29 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 2 529 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 169 485 -;
#X text 157 270 float;
#X text 197 270 - raw MIDI data stream;
#X obj 126 41 cnv 4 4 4 empty empty input 0 28 2 18 #e0e0e0 #000000 0;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 4 pd;
#X obj 345 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X text 197 306 -;
#X text 157 306 float;
#X obj 95 304 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 299 217 else/display;
#X obj 218 217 else/display;
#X text 20 194 see also:;
#X text 212 244 Value;
#X obj 258 217 else/display;
#X text 261 242 #;
#X text 288 241 channel;
#X msg 227 131 180 \, 12 \, 100;
#X msg 253 163 176 \, 64 \, 20;
#X text 197 411 -;
#X text 157 411 float;
#X obj 94 362 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 196 362 -;
#X text 156 362 float;
#X text 196 387 -;
#X text 156 387 float;
#X obj 94 384 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 94 408 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 212 411 MIDI channel;
#X text 315 124 Control message (raw MIDI data), f 15;
#X text 211 387 control number, f 31;
#X text 211 362 control value, f 31;
#X obj 22 214 else/ctl.out;
#X obj 227 192 else/ctl.in;
#X text 197 330 -;
#X text 157 330 float;
#X obj 95 327 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 212 306 Controller number, f 31;
#X text 212 330 MIDI channel (0 for omni), f 31;
#N canvas 742 205 517 425 control# 0;
#X obj 176 185 midiin;
#X text 48 16 An argument sets the channel number. If so \, only MIDI messages that correspond to that channel are sent. If no channel is given \, it loads "0" as the default and the object operates in omni mode \, where the objects outputs values from all channels and the channel number is output in the right outlet. You can also change the channel with the right inlet (0 sets to omni)., f 67;
#X obj 176 333 else/ctl.in;
#X obj 248 357 else/display;
#X obj 207 357 else/display;
#X obj 167 357 else/display;
#X msg 257 295 1;
#X msg 290 295 5;
#X text 320 295 <= channel;
#X msg 239 269 0;
#X text 267 269 <= omni;
#X floatatom 207 237 5 -1 127 0 - - - 0;
#X text 48 90 Two arguments set the control and channel number. If MIDI channel is OMNI \, all control number messages are sent. But if a control number and channel are set \, only values from that control number and channel pass through. A control number of "-1" lets all controllers come out., f 67;
#X msg 207 215 -1;
#X text 237 215 All;
#X text 243 236 control number;
#X connect 0 0 2 0;
#X connect 2 0 5 0;
#X connect 2 1 4 0;
#X connect 2 2 3 0;
#X connect 6 0 2 2;
#X connect 7 0 2 2;
#X connect 9 0 2 2;
#X connect 11 0 2 1;
#X connect 13 0 11 0;
#X restore 459 186 pd control# \; channel;
#X text 103 485 1) list;
#X text 183 485 one value sets sets channel number (default 0 - OMNI). Two values set control number (default -1 - ALL) and channel number., f 54;
#X obj 2 438 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 129 450 -ext: - only listen to external input source, f 46;
#N canvas 653 199 427 374 external 0;
#X obj 174 209 else/midi;
#X obj 174 297 print;
#X msg 110 228 ext \$1;
#X obj 110 200 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 36 84 The left inlet provides and "external" source of raw MIDI data input. This is needed if you have \, for instance \, the [midi] object from ELSE reading a MIDI file or something. If \, by any chance \, you just want the object to receive from this external source and not listen to the internal connected device \, you can use the '-ext' flag or 'ext' message \, to force only the external input.;
#X text 36 30 The object automatically listens to whatever is connected as a MIDI device in Pd. So it's like it has a built in [midiin] object feeding its inlet. This is considered to be an "internal" source., f 59;
#X obj 174 265 else/ctl.in;
#X connect 0 0 6 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 6 0 1 0;
#X restore 463 222 pd external;
#X text 69 86 [ctl.in] extracts MIDI Program information from raw MIDI input or a connected MIDI device., f 61;
#X text 121 286 ext <float>;
#X text 196 286 -;
#X text 211 286 non zero sets to listen only to external input source;
#X connect 31 0 47 0;
#X connect 32 0 47 0;
#X connect 47 0 25 0;
#X connect 47 1 28 0;
#X connect 47 2 24 0;
