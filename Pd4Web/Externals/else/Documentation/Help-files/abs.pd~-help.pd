#N canvas 395 38 565 510 10;
#X obj 3 259 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 375 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 110 384 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 111 267 cnv 17 3 78 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 3 477 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 305 3 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 2 pd;
#X obj 344 10 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 22 39 cnv 4 4 4 empty empty Abstraction\ to\ load\ pd~\ subprocesses 0 28 2 18 #e0e0e0 #000000 0;
#X obj 457 10 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 10 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 10 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 25 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 25 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 2 2 cnv 15 301 42 empty empty abs.pd~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 2 graph;
#X obj 174 157 sig~ 1;
#X obj 369 157 sig~ 2;
#X obj 174 229 else/numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 369 229 else/numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 111 351 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 111 411 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 174 385 signal;
#X text 220 385 - the left output from subprocess;
#X text 174 410 signal;
#X text 220 410 - the right output from subprocess;
#X text 173 267 signal;
#X text 173 352 signal;
#X text 219 267 - the left input to subprocess, f 49;
#X text 219 352 - the right input to subprocess;
#X text 156 453 1) symbol - .pd file to load (default none);
#X obj 489 138 else/setdsp~;
#X text 17 166 see also:;
#X obj 14 188 else/sendmidi;
#X text 185 283 stop;
#X text 219 283 - stop the subprocess, f 49;
#X obj 14 215 pd~, f 5;
#X text 161 329 anything;
#X text 219 329 - messages to the subprocess, f 49;
#N canvas 490 54 448 436 +details 0;
#X msg 156 137 start abs.pd~-testpatch.pd;
#X obj 155 361 else/abs.pd~, f 13;
#X msg 175 168 stop;
#X msg 102 157 start;
#X text 45 25 This object is still experimental and limited to just 2 ins and 2 outs \, but more features are planned. If you give it an argument \, it automatically loads/starts the sub-process. In order for this to happen \, both sub and super processes have their DSP state automatically set to on. If you don't want anything to start at loading the patch \, just don't give it any arguments and then send it a start message.;
#X msg 198 241 test \$1;
#X floatatom 198 212 5 0 0 0 - - - 0;
#X msg 208 309 pd dsp \$1;
#X obj 208 276 tgl 16 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 245 206 send other messages to the sub-process, f 20;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X connect 7 0 1 0;
#X connect 8 0 7 0;
#X restore 475 225 pd +details;
#X msg 126 157 stop;
#X msg 232 157 start;
#X obj 3 440 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X text 125 299 start <symbol>;
#X text 219 299 - start a subprocess \, no symbol restarts last one;
#X text 121 199 click ->;
#X text 57 88 [abs.pd~] loads a pd file into a subprocess via [pd~] and makes things more convenient like making the subprocess able to receive MIDI data from MIDI devices connected to the parent process (thanks to [sendmidi]). Also \, you can open the subprocess patch by clicking on the object., f 77;
#X obj 174 198 else/abs.pd~ abs.pd~-testpatch.pd;
#X msg 291 167 show;
#X text 185 314 show;
#X text 219 314 - same as clicking on the object, f 49;
#X connect 16 0 47 0;
#X connect 17 0 47 1;
#X connect 40 0 47 0;
#X connect 41 0 47 0;
#X connect 47 0 18 0;
#X connect 47 1 19 0;
#X connect 48 0 47 0;
