#N canvas 447 36 561 535 10;
#X obj 2 3 cnv 15 301 42 empty empty rand.f 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X obj 23 40 cnv 4 4 4 empty empty Random 0 28 2 18 #e0e0e0 #000000 0;
#X obj 145 40 cnv 4 4 4 empty empty number 0 28 2 18 #e0e0e0 #000000 0;
#X obj 213 39 cnv 4 4 4 empty empty generator 0 28 2 18 #e0e0e0 #000000 0;
#X obj 98 40 cnv 4 4 4 empty empty float 0 28 2 18 #e0e0e0 #000000 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 506 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 4 373 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 458 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 111 383 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 111 268 cnv 17 3 51 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 4 258 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X text 135 288 seed <float>;
#X text 219 384 - random values;
#X obj 111 329 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 111 350 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 219 330 - lowest random value;
#X text 218 351 - highest random value;
#X obj 246 160 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 305 161 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 254 139 low;
#X text 316 141 high;
#X obj 188 156 bng 17 250 50 0 empty empty empty 17 7 0 10 #dcdcdc #000000 #000000;
#X text 183 268 bang;
#X text 177 330 float;
#X text 177 351 float;
#X text 177 383 float;
#X obj 188 217 else/display;
#X obj 6 407 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 135 416 -seed <float>: seed value (default: unique internal);
#N canvas 529 124 603 329 seed 0;
#X text 26 21 Pseudo random number generators aren't true random number generators. Instead \, an algorithm is used to provide a sequence of numbers that seems random. The same sequence can be reproduced if you set a "seed" value \, which can be any integer number., f 52;
#X text 370 24 You can set a seed with the '-seed' flag. If you don't supply it \, each object gets its own seed internal seed. If you send a 'seed' message without float \, the object also gets a unique seed value., f 27;
#X msg 456 194 seed;
#X msg 446 165 seed 123;
#X obj 33 258 else/display;
#X obj 233 258 else/display;
#X obj 471 221 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X obj 446 257 s \$0-rand.f;
#X obj 33 187 r \$0-rand.f;
#X obj 233 187 r \$0-rand.f;
#X obj 33 221 else/rand.f -seed 123 -100 100;
#X obj 233 221 else/rand.f -seed 123 -100 100;
#X text 26 100 Seeds are kept locally \, which means that if two [rand.f] objects are seeded the same they will have the same output. Conversely \, you can seed the same [rand.f] object twice with the same seed to repeat the output., f 52;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 6 0 7 0;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 10 0 4 0;
#X connect 11 0 5 0;
#X restore 464 175 pd seed;
#X text 219 287 - a float sets seed \, no float sets a unique internal;
#X text 14 173 see also:;
#X obj 14 192 else/rand.f~;
#X obj 14 217 else/rand.i;
#X text 168 466 1) float - minimum (default 0);
#X text 168 483 2) float - maximum (default 1);
#X obj 188 192 else/rand.f -100 100;
#X text 135 434 -n <float>: snumber of elements to output (default: 1);
#X text 153 305 n <float>;
#X text 219 304 - set number of elements to output;
#X text 219 267 - generate random numbers;
#X text 62 89 [rand.f] generates random float values for a given range when triggered with a bang. Use the seed message if you want a reproducible output. You can also output lists., f 71;
#N canvas 632 153 410 256 list 0;
#X obj 131 198 else/display;
#X obj 131 162 else/rand.f -n 3 -100 100;
#X obj 131 87 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X msg 143 124 n 2;
#X msg 99 124 n 1;
#X msg 179 124 n 3;
#X text 63 34 The '-n' flag or message sets the number of elements to output (default 1)., f 40;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X restore 463 204 pd list;
#X connect 26 0 45 1;
#X connect 27 0 45 2;
#X connect 30 0 45 0;
#X connect 45 0 35 0;
