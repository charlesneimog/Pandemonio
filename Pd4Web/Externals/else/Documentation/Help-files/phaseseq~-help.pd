#N canvas 489 71 560 435 10;
#X obj 4 264 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 316 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 3 371 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 147 325 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 3 403 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 23 40 cnv 4 4 4 empty empty Impulse\ sequence\ from\ phasor\ input 0 28 2 18 #e0e0e0 #000000 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 3 3 cnv 15 301 42 empty empty phaseseq~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X obj 147 272 cnv 17 3 35 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 171 380 1) list;
#X text 202 275 signal;
#X text 178 293 set <list>;
#X text 249 275 - phase signal input, f 30;
#X text 249 293 - set threshold values, f 30;
#X text 226 380 - threshold values (default none);
#X text 202 326 signal;
#X text 62 90 [phaseseq~] takes a list of thresholds and outputs impulses when reaching the threshold values., f 62;
#X obj 156 196 else/out~;
#N canvas 605 172 397 420 example 0;
#X obj 249 169 else/knob 50 0 1 0 0 empty empty #dfdfdf #7c7c7c black 0 0 0 0 1 360 0 0;
#X obj 79 202 else/trig2bang~;
#X obj 79 227 bng 19 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X floatatom 249 233 7 0 0 0 - - - 12;
#X obj 249 145 else/s2f~ 100;
#X obj 127 326 else/out~;
#X obj 61 150 else/phaseseq~ 0.2 0.3 0.5 0.7 0.9, f 19;
#X obj 61 272 else/resonant~ 600 1200;
#X obj 214 272 else/resonant~ 1100 500;
#X text 44 24 You can also use [pimp~] so you can have a separate impulse for the head of the tempo \, but note that a value of '0' also works for that in [phaseseq~]., f 51;
#X obj 61 87 else/pimp~ 0.2, f 26;
#X msg 245 101 set 0 0.3 0.66 0.9;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 4 0 0 0;
#X connect 6 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 8 0 5 1;
#X connect 10 0 4 0;
#X connect 10 0 6 0;
#X connect 10 1 8 0;
#X connect 11 0 6 0;
#X restore 468 227 pd example;
#X obj 333 199 else/numbox~ 6 10 100 #C0C0C4 #440008 10 0 0 0;
#X obj 156 165 else/phaseseq~ 0 0.25 0.5 0.75;
#X obj 156 132 phasor~ 0.5;
#X obj 147 348 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 202 349 signal;
#X text 249 349 - index from sequence;
#X text 249 326 - impulse at sequence's values;
#X connect 28 0 25 0;
#X connect 28 1 27 0;
#X connect 29 0 28 0;
