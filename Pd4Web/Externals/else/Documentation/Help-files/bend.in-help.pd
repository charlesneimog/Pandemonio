#N canvas 312 34 570 526 10;
#X obj 23 40 cnv 4 4 4 empty empty Midi 0 28 2 18 #e0e0e0 #000000 0;
#X obj 66 40 cnv 4 4 4 empty empty pitch 0 28 2 18 #e0e0e0 #000000 0;
#X obj 3 3 cnv 15 301 42 empty empty bend.in 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 3 graph;
#X obj 2 263 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 340 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 459 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 2 492 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 209 469 -;
#X text 151 469 1) float;
#X text 203 375 -;
#X text 163 375 float;
#X text 218 375 MIDI channel, f 31;
#X obj 153 40 cnv 4 4 4 empty empty input 0 28 2 18 #e0e0e0 #000000 0;
#X obj 119 350 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 203 350 -;
#X text 163 350 float;
#X obj 119 372 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 306 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 3 pd;
#X obj 345 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 458 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 478 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 515 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 464 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 502 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 782 189 448 247 channel 0;
#X text 87 202 Pitch Bend;
#X msg 240 131 1;
#X msg 273 131 5;
#X text 303 131 <= channel;
#X msg 222 105 0;
#X text 250 105 <= omni;
#X text 20 9 An argument sets the channel number. If so \, only MIDI messages that correspond to that channel are sent. If no channel is given \, it loads "0" as the default and the object operates in omni mode \, where the objects outputs values from all channels and the channel number is output in the right outlet. You can also change the channel with the right inlet (0 sets to omni)., f 67;
#X obj 159 169 else/bend.in 5;
#X obj 159 199 else/display;
#X msg 123 104 228 \, 37 \, 36;
#X connect 1 0 7 1;
#X connect 2 0 7 1;
#X connect 4 0 7 1;
#X connect 7 0 8 0;
#X connect 9 0 7 0;
#X restore 473 186 pd channel;
#X text 218 349 MIDI pitch bend (from -1 to 1), f 31;
#X obj 110 40 cnv 4 4 4 empty empty bend 0 28 2 18 #e0e0e0 #000000 0;
#X text 223 469 sets channel number (default 0 - OMNI);
#X text 203 319 -;
#X text 163 319 float;
#X text 218 319 MIDI channel, f 31;
#X obj 119 316 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 144 413 -raw: sets to raw output mode (from 0-16383);
#N canvas 812 241 447 234 raw 0;
#X text 34 17 With the -raw flag \, the pitch bend values are output as integers from 0 to 16383 \, whereas the default behaviour is a normalized output (floats from -1 to 1), f 67;
#X obj 156 88 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 156 115 else/bend.out -raw;
#X obj 156 143 else/bend.in -raw;
#X obj 156 177 else/display;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X restore 496 210 pd raw;
#X text 236 198 MIDI channel =>;
#X text 178 229 Pitch Bend =>;
#X text 25 201 see also:;
#X obj 32 223 else/bend.out;
#X obj 263 174 else/bend.in;
#X obj 263 228 else/display;
#X obj 332 195 else/display;
#N canvas 653 199 427 384 external 0;
#X obj 175 221 else/midi;
#X obj 175 309 print;
#X msg 111 240 ext \$1;
#X obj 111 212 tgl 19 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X text 37 42 The object automatically listens to whatever is connected as a MIDI device in Pd. So it's like it has a built in [midiin] object feeding it. This is considered to be an "internal" source.;
#X text 37 96 The left inlet provides and "external" source of raw MIDI data input. This is needed if you have \, for instance \, the [midi] object from ELSE reading a MIDI file or something. If \, by any chance \, you just want the object to receive from this external source and not listen to the internal connected device \, you can use the '-ext' flag or 'ext' message \, to force only the external input.;
#X obj 175 277 else/bend.in;
#X connect 0 0 6 0;
#X connect 2 0 6 0;
#X connect 3 0 2 0;
#X connect 6 0 1 0;
#X restore 467 234 pd external;
#X text 165 275 float;
#X text 205 275 - raw MIDI data stream;
#X obj 119 272 cnv 17 3 37 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 129 293 ext <float>;
#X text 204 293 - non zero sets to listen only to external input source;
#X obj 2 398 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 144 430 -ext: - only listen to external input source, f 46;
#X msg 263 147 228 \, 37 \, 36;
#X text 70 85 [bend.in] extracts MIDI Pitch Bend information from raw MIDI input (or a connected MIDI device. By default \, output values are normalized to floats from -1 to 1 \, but you can change it to "raw" mode (output integers from 0 to 16383)., f 69;
#X connect 40 0 41 0;
#X connect 40 1 42 0;
#X connect 51 0 40 0;
